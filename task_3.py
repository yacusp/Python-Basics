# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на
# наличие только чисел. Проверить работу исключения на реальном примере. Запрашивать у
# пользователя данные и заполнять список необходимо только числами. Класс-исключение
# должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока
# пользователь сам не остановит работу скрипта, введя, например, команду «stop». При этом
# скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
# Во время ввода пользователем очередного элемента необходимо реализовать проверку типа
# элемента. Вносить его в список, только если введено число. Класс-исключение должен не
# позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class MyInputCheck(Exception):
    pass


final_list = []

while True:
    user_input = input('Enter an integer or enter \"stop\" to finish: ')
    if user_input == 'stop':
        print(final_list)
        break
    try:
        user_input = int(user_input)
    except ValueError:
        pass

    try:
        if isinstance(user_input, int):
            final_list.append(user_input)
        else:
            raise MyInputCheck('Not an integer. Wasn\'t added to the list.')
    except MyInputCheck as err:
        print(err)
